# Production Configuration for Clinic Management System

# Application Configuration
spring.application.name=clinic-management-system
server.port=8080

# PostgreSQL Database Configuration
spring.datasource.url=jdbc:postgresql://postgres:5432/clinic_management
spring.datasource.username=clinic_user
spring.datasource.password=clinic_password_2024
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.defer-datasource-initialization=false

# MongoDB Configuration
spring.data.mongodb.host=mongodb
spring.data.mongodb.port=27017
spring.data.mongodb.database=clinic_history
spring.data.mongodb.username=admin
spring.data.mongodb.password=admin_password_2024
spring.data.mongodb.authentication-database=admin

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000

# Jackson Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=America/Bogota

# Logging Configuration
logging.level.app.clinic=INFO
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.root=WARN

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Security Configuration
app.security.jwt.secret=mySecretKey12345678901234567890123456789012345678901234567890
app.security.jwt.expiration=86400000

# Business Rules Configuration
app.billing.copayment.amount=50000
app.billing.annual.copayment.limit=1000000
app.billing.copayment.currency=COP

# Application Settings
app.name=Clinic Management System
app.version=1.0.0
app.description=Comprehensive clinic management system - Production Environment

# API Documentation (Swagger/OpenAPI)
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha

# Redis Cache Configuration
spring.data.redis.host=redis
spring.data.redis.port=6379
spring.data.redis.password=redis_password_2024
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.jedis.pool.max-active=20
spring.data.redis.jedis.pool.max-idle=8
spring.data.redis.jedis.pool.min-idle=0
spring.data.redis.jedis.pool.max-wait=-1ms

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.time-to-live=600000
spring.cache.redis.cache-null-values=false

# Cache Names Configuration
app.cache.patients.name=patients
app.cache.patients.ttl=300000
app.cache.appointments.name=appointments
app.cache.appointments.ttl=180000
app.cache.medical-records.name=medical-records
app.cache.medical-records.ttl=900000
app.cache.billing.name=billing
app.cache.billing.ttl=120000

# Management Endpoints (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics,caches,redis
management.endpoint.health.show-details=when-authorized
management.endpoint.caches.show-statistics=true

# Cache Metrics Configuration
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.9,0.95,0.99
management.metrics.distribution.sla.http.server.requests=50ms,100ms,200ms,300ms,500ms,1s

# Redis Metrics
management.metrics.export.redis.enabled=true
management.metrics.redis.commands.enabled=true

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://127.0.0.1:3000,http://localhost:8080,http://127.0.0.1:8080,file://
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# Error Handling
server.error.include-message=never
server.error.include-binding-errors=never
server.error.include-stacktrace=never
server.error.include-exception=false