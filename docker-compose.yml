version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: clinic-postgres
    environment:
      POSTGRES_DB: clinic_management
      POSTGRES_USER: clinic_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-clinic_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./clinic/src/main/resources/db/migration:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clinic_user -d clinic_management"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: clinic-mongodb
    environment:
      MONGO_INITDB_DATABASE: clinic_history
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-clinic_mongo_2024}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: clinic-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Backend Application
  backend:
    build:
      context: ./clinic
      dockerfile: Dockerfile
    container_name: clinic-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/clinic_management
      SPRING_DATASOURCE_USERNAME: clinic_user
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD:-clinic_password_2024}
      SPRING_DATA_MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-clinic_mongo_2024}@mongodb:27017/clinic_history?authSource=admin
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-here-change-in-production}
      JWT_EXPIRATION: 86400000
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: clinic-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - clinic-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  clinic-network:
    driver: bridge