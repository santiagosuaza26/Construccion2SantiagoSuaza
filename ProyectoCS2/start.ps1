# Script de inicio r√°pido para Windows - API REST de Cl√≠nica CS2
Write-Host "üè• Iniciando API REST - Cl√≠nica CS2" -ForegroundColor Green
Write-Host "=====================================" -ForegroundColor Green

# Verificar si Docker Desktop est√° disponible
$dockerAvailable = Get-Command docker -ErrorAction SilentlyContinue
$dockerComposeAvailable = Get-Command docker-compose -ErrorAction SilentlyContinue

if ($dockerAvailable -and $dockerComposeAvailable) {
    Write-Host "üê≥ Docker detectado. Iniciando con Docker Compose..." -ForegroundColor Cyan

    # Crear archivo .env si no existe
    if (-not (Test-Path .env)) {
        Write-Host "üìÑ Creando archivo .env con configuraci√≥n por defecto..." -ForegroundColor Yellow
        Copy-Item .env.example .env
        Write-Host "‚úÖ Archivo .env creado. Puede editarlo para personalizar la configuraci√≥n." -ForegroundColor Green
    }

    # Construir e iniciar contenedores
    Write-Host "üî® Construyendo e iniciando contenedores..." -ForegroundColor Yellow
    docker-compose up --build -d

    Write-Host ""
    Write-Host "üöÄ API REST iniciada exitosamente!" -ForegroundColor Green
    Write-Host ""
    Write-Host "üì° Endpoints disponibles:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ API REST: http://localhost:8080/api" -ForegroundColor White
    Write-Host "   ‚Ä¢ Documentaci√≥n: http://localhost:8080/api/swagger-ui.html" -ForegroundColor White
    Write-Host "   ‚Ä¢ H2 Console: http://localhost:8080/api/h2-console" -ForegroundColor White
    Write-Host "   ‚Ä¢ Mongo Express: http://localhost:8081" -ForegroundColor White
    Write-Host "   ‚Ä¢ Adminer: http://localhost:8082" -ForegroundColor White
    Write-Host ""
    Write-Host "üîë Credenciales de prueba:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ RRHH: carlos123 / Carlos123!" -ForegroundColor White
    Write-Host "   ‚Ä¢ Admin: maria123 / Maria123!" -ForegroundColor White
    Write-Host "   ‚Ä¢ Soporte: jorge123 / Jorge123!" -ForegroundColor White
    Write-Host "   ‚Ä¢ M√©dico: ana123 / Ana123!" -ForegroundColor White
    Write-Host "   ‚Ä¢ Enfermera: lucia123 / Lucia123!" -ForegroundColor White
    Write-Host ""
    Write-Host "üìä Bases de datos:" -ForegroundColor Cyan
    Write-Host "   ‚Ä¢ MySQL: clinicdb_prod (puerto 3306)" -ForegroundColor White
    Write-Host "   ‚Ä¢ MongoDB: clinical_history_prod (puerto 27017)" -ForegroundColor White
    Write-Host ""
    Write-Host "üõë Para detener: docker-compose down" -ForegroundColor Yellow
    Write-Host "üìã Para ver logs: docker-compose logs -f app" -ForegroundColor Yellow

} else {
    Write-Host "üêß Docker no detectado. Iniciando localmente con Maven..." -ForegroundColor Cyan
    Write-Host ""
    Write-Host "‚ö†Ô∏è  Aseg√∫rese de tener:" -ForegroundColor Yellow
    Write-Host "   ‚Ä¢ Java 17+ instalado" -ForegroundColor White
    Write-Host "   ‚Ä¢ MySQL corriendo en localhost:3306" -ForegroundColor White
    Write-Host "   ‚Ä¢ MongoDB corriendo en localhost:27017" -ForegroundColor White
    Write-Host ""
    Write-Host "üî® Compilando proyecto..." -ForegroundColor Yellow
    & .\mvnw.cmd clean compile -DskipTests

    Write-Host "üöÄ Iniciando aplicaci√≥n..." -ForegroundColor Green
    & .\mvnw.cmd spring-boot:run
}

Write-Host ""
Write-Host "üè• ¬°API REST de Cl√≠nica CS2 lista para usar!" -ForegroundColor Green